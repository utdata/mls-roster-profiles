---
title: "Cleaning"
---

```{r}
#| label: setup
#| message: false
#| warning: false

library(tidyverse)
library(janitor)
```

## Import

```{r}
roster_raw <- read_csv("data-raw/pinpoint/Roster.csv") |> clean_names()
others_raw <- read_csv("data-raw/pinpoint/Other.csv") |> clean_names()
```
## Roster cleaning

### Make short club name

```{r}
roster_club <- roster_raw |> 
  mutate(
    club_short = str_extract(file_name, "^\\w*") |> str_to_upper()
  ) |>
  relocate(club_short) |> 
  select(!c(file_name, validation_link))

roster_club |> glimpse()
```

### Make roster designation

- Make a roster type variable
  - This is a challenge because the senior roster designation is not there.
  - Once I have senior, then I can pull from name when roster changes, then fill down.

This checks if name starts with three uppercase letters and if so make that the roster spot.

```{r}
roster_subtype <- roster_club |> 
  mutate(
    roster_type = case_when(
      is.na(lag(club_short)) ~ "SENIOR ROSTER",
      lag(club_short) != club_short ~ "SENIOR ROSTER",
      str_detect(name, "[A-Z]{3}") ~ name,
      .default = NA
    )
  ) |>
  fill(roster_type) |> 
  relocate(roster_type, .after = club_short) |> 
  filter(!str_detect(name, "[A-Z]{3}")) # remove supp headers

roster_subtype
```

## Others cleaning

### Make short club name

```{r}
others_club <- others_raw |> 
  mutate(
    club_short = str_extract(file_name, "^\\w*") |> str_to_upper()
  ) |>
  relocate(club_short) |> 
  select(!c(file_name, validation_link))

others_club
```

## Adding player_type variable

This sets the player type

```{r}
others_type <- others_club |> 
  filter(name != "NAME") |>
  mutate(
    player_type = case_when(
      is.na(lag(club_short)) ~ "INTERNATIONAL SLOT",
      lag(club_short) != club_short ~ "INTERNATIONAL SLOT",
      str_detect(name, "[A-Z]{3}") ~ name,
      .default = NA
    )
  ) |>
  fill(player_type) |> 
  filter(str_detect(no, "^\\d")) |>
  relocate(player_type, .after = club_short)


others_type
```

## Add notes variables

There are several notes that are hopefully the same across all teams.

```{r}
others_notes <- others_type |> 
  mutate(
    notes_young = if_else(str_detect(name, "Young DP"), TRUE, FALSE),
    notes_unavail = if_else(str_detect(name, "\\*"), TRUE, FALSE),
    notes_notam = if_else(str_detect(name, "\\^"), TRUE, FALSE),
    notes_can =  if_else(str_detect(name, "\\+"), TRUE, FALSE),
  )

others_notes
```

And now I clean out the notes form the names. I'm leaving this to check.

```{r}
others_notes_fixes <- others_notes |> 
  mutate(
    name_clean = str_remove_all(name, "\\(Young DP\\)|\\^|\\*|\\+")
  ) |>
  relocate(name_clean, .before = name)

others_notes_fixes |> select(starts_with("name"), starts_with("notes"))  
```

## Tighten columns

This gets us to just the clean name.

```{r}
others_clean <- others_notes_fixes |> 
  select(!name) |> 
  rename(name = name_clean)

others_clean |> glimpse()
```

## Export the files

```{r}
roster_subtype |> write_csv("data-out/rosters.csv")
roster_subtype |> write_rds("data-processed/rosters.rds")
others_clean |> write_csv("data-out/others.csv")
others_clean |> write_rds("data-processed/others.rds")
```

